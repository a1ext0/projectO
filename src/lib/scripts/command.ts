import { VK } from 'easyvk';
import Easyvk from '../vk';
import json from './creator';
import { Iparams } from './creator';
class Command {
  /**
   * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–±—ã—Ç–∏–∏ "–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–º–µ–µ—Ç –ª–∏ –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
   * @param m –ú–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∏–∑ –≤–∫ API
   * @param vk –û–±—å–µ–∫—Ç –≤–∫, –Ω—É–∂–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
   */
  message(m: Array<any>, vk: VK) {
    let info = json.get();
    if (info) {
      let users = info.users;
      let from = m[3].toString();
      if (users && users.includes(from)) {
        switch (m[5].toLowerCase()) {
          case '–æ—Ç–∫—Ä—ã–ª':
            exec.open(info, vk, m);
            break;
          case '–∑–∞–∫—Ä—ã–ª':
            json.close();
            break;

          default:
            break;
        }
      }
    }
  }
}

class Exec {
  /**
   * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–µ–ø–ª–∏—Ü—ã
   * @param info json —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   * @param vk –û–±—å–µ–∫—Ç –≤–∫, –Ω—É–∂–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
   * @param m –ú–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∏–∑ –≤–∫ API
   */
  async open(info: Iparams, vk: VK, m: Array<any>) {
    json.open();
    try {
      let sended = await vk.call('users.get', {
        user_ids: `${m[3]}`,
        mark_conversation_as_read: 1,
      });
      let user = sended[0].first_name;
      if (info) {
        for (const userId of info.users) {
          console.log('sss');
          let message: string;
          if (userId == m[3]) {
            message = `${user}, —Å–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∫—Ä—ã—Ç—É—é —Ç–µ–ø–ª–∏—Ü—É üòò`;
          } else {
            message = `${user} –æ—Ç–∫—Ä—ã–ª —Ç–µ–ø–ª–∏—Ü—É, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ —Å–∫–∞–∑–∞—Ç—å –µ–º—É —Å–ø–∞—Å–∏–±–æ`;
          }
          vk.call('messages.send', {
            user_id: info.users[0], //TODO: –∑–∞–º–µ–Ω–∏—Ç—å 0 –Ω–∞ userId
            random_id: Easyvk.randomId(),
            message: message,
          });
        }
      }
    } catch (error) {
      console.log(error);
    }
  }
}

const exec = new Exec();

export default new Command();
